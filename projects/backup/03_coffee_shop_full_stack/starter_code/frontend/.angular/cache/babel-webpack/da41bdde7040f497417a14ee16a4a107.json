{"ast":null,"code":"import _defineProperty from \"/Users/debasisbehera/Desktop/Learning/Udacity/FSND/projects/03_coffee_shop_full_stack/starter_code/frontend/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _asyncToGenerator from \"/Users/debasisbehera/Desktop/Learning/Udacity/FSND/projects/03_coffee_shop_full_stack/starter_code/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _toConsumableArray from \"/Users/debasisbehera/Desktop/Learning/Udacity/FSND/projects/03_coffee_shop_full_stack/starter_code/frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _createForOfIteratorHelper from \"/Users/debasisbehera/Desktop/Learning/Udacity/FSND/projects/03_coffee_shop_full_stack/starter_code/frontend/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";\nimport _classCallCheck from \"/Users/debasisbehera/Desktop/Learning/Udacity/FSND/projects/03_coffee_shop_full_stack/starter_code/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/debasisbehera/Desktop/Learning/Udacity/FSND/projects/03_coffee_shop_full_stack/starter_code/frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _regeneratorRuntime from \"/Users/debasisbehera/Desktop/Learning/Udacity/FSND/projects/03_coffee_shop_full_stack/starter_code/frontend/node_modules/@babel/runtime/regenerator\";\nimport { r as registerInstance, e as createEvent, i as getElement, h, H as Host } from './index-7a8b7a1c.js';\nimport { c as componentOnReady, n as debounce } from './helpers-dd7e4b7b.js';\nimport { b as getIonMode } from './ionic-global-63a97a32.js';\nimport { o as openURL, c as createColorClasses } from './theme-ff3fc52f.js';\n\nvar Route = /*#__PURE__*/function () {\n  function Route(hostRef) {\n    _classCallCheck(this, Route);\n\n    registerInstance(this, hostRef);\n    this.ionRouteDataChanged = createEvent(this, \"ionRouteDataChanged\", 7);\n    /**\n     * Relative path that needs to match in order for this route to apply.\n     *\n     * Accepts paths similar to expressjs so that you can define parameters\n     * in the url /foo/:bar where bar would be available in incoming props.\n     */\n\n    this.url = '';\n  }\n\n  _createClass(Route, [{\n    key: \"onUpdate\",\n    value: function onUpdate(newValue) {\n      this.ionRouteDataChanged.emit(newValue);\n    }\n  }, {\n    key: \"onComponentProps\",\n    value: function onComponentProps(newValue, oldValue) {\n      if (newValue === oldValue) {\n        return;\n      }\n\n      var keys1 = newValue ? Object.keys(newValue) : [];\n      var keys2 = oldValue ? Object.keys(oldValue) : [];\n\n      if (keys1.length !== keys2.length) {\n        this.onUpdate(newValue);\n        return;\n      }\n\n      var _iterator = _createForOfIteratorHelper(keys1),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var key = _step.value;\n\n          if (newValue[key] !== oldValue[key]) {\n            this.onUpdate(newValue);\n            return;\n          }\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n    }\n  }, {\n    key: \"connectedCallback\",\n    value: function connectedCallback() {\n      this.ionRouteDataChanged.emit();\n    }\n  }], [{\n    key: \"watchers\",\n    get: function get() {\n      return {\n        \"url\": [\"onUpdate\"],\n        \"component\": [\"onUpdate\"],\n        \"componentProps\": [\"onComponentProps\"]\n      };\n    }\n  }]);\n\n  return Route;\n}();\n\nvar RouteRedirect = /*#__PURE__*/function () {\n  function RouteRedirect(hostRef) {\n    _classCallCheck(this, RouteRedirect);\n\n    registerInstance(this, hostRef);\n    this.ionRouteRedirectChanged = createEvent(this, \"ionRouteRedirectChanged\", 7);\n  }\n\n  _createClass(RouteRedirect, [{\n    key: \"propDidChange\",\n    value: function propDidChange() {\n      this.ionRouteRedirectChanged.emit();\n    }\n  }, {\n    key: \"connectedCallback\",\n    value: function connectedCallback() {\n      this.ionRouteRedirectChanged.emit();\n    }\n  }], [{\n    key: \"watchers\",\n    get: function get() {\n      return {\n        \"from\": [\"propDidChange\"],\n        \"to\": [\"propDidChange\"]\n      };\n    }\n  }]);\n\n  return RouteRedirect;\n}();\n\nvar ROUTER_INTENT_NONE = 'root';\nvar ROUTER_INTENT_FORWARD = 'forward';\nvar ROUTER_INTENT_BACK = 'back'; // Join the non empty segments with \"/\".\n\nvar generatePath = function generatePath(segments) {\n  var path = segments.filter(function (s) {\n    return s.length > 0;\n  }).join('/');\n  return '/' + path;\n};\n\nvar generateUrl = function generateUrl(segments, useHash, queryString) {\n  var url = generatePath(segments);\n\n  if (useHash) {\n    url = '#' + url;\n  }\n\n  if (queryString !== undefined) {\n    url += '?' + queryString;\n  }\n\n  return url;\n};\n\nvar writePath = function writePath(history, root, useHash, path, direction, state, queryString) {\n  var url = generateUrl([].concat(_toConsumableArray(parsePath(root).segments), _toConsumableArray(path)), useHash, queryString);\n\n  if (direction === ROUTER_INTENT_FORWARD) {\n    history.pushState(state, '', url);\n  } else {\n    history.replaceState(state, '', url);\n  }\n};\n\nvar chainToPath = function chainToPath(chain) {\n  var path = [];\n\n  var _iterator2 = _createForOfIteratorHelper(chain),\n      _step2;\n\n  try {\n    for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n      var route = _step2.value;\n\n      var _iterator3 = _createForOfIteratorHelper(route.path),\n          _step3;\n\n      try {\n        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n          var segment = _step3.value;\n\n          if (segment[0] === ':') {\n            var param = route.params && route.params[segment.slice(1)];\n\n            if (!param) {\n              return null;\n            }\n\n            path.push(param);\n          } else if (segment !== '') {\n            path.push(segment);\n          }\n        }\n      } catch (err) {\n        _iterator3.e(err);\n      } finally {\n        _iterator3.f();\n      }\n    }\n  } catch (err) {\n    _iterator2.e(err);\n  } finally {\n    _iterator2.f();\n  }\n\n  return path;\n}; // Remove the prefix segments from the path segments.\n//\n// Return:\n// - null when the path segments do not start with the passed prefix,\n// - the path segments after the prefix otherwise.\n\n\nvar removePrefix = function removePrefix(prefix, path) {\n  if (prefix.length > path.length) {\n    return null;\n  }\n\n  if (prefix.length <= 1 && prefix[0] === '') {\n    return path;\n  }\n\n  for (var i = 0; i < prefix.length; i++) {\n    if (prefix[i] !== path[i]) {\n      return null;\n    }\n  }\n\n  if (path.length === prefix.length) {\n    return [''];\n  }\n\n  return path.slice(prefix.length);\n};\n\nvar readPath = function readPath(loc, root, useHash) {\n  var prefix = parsePath(root).segments;\n  var pathname = useHash ? loc.hash.slice(1) : loc.pathname;\n  var path = parsePath(pathname).segments;\n  return removePrefix(prefix, path);\n}; // Parses the path to:\n// - segments an array of '/' separated parts,\n// - queryString (undefined when no query string).\n\n\nvar parsePath = function parsePath(path) {\n  var segments = [''];\n  var queryString;\n\n  if (path != null) {\n    var qsStart = path.indexOf('?');\n\n    if (qsStart > -1) {\n      queryString = path.substr(qsStart + 1);\n      path = path.substr(0, qsStart);\n    }\n\n    segments = path.split('/').map(function (s) {\n      return s.trim();\n    }).filter(function (s) {\n      return s.length > 0;\n    });\n\n    if (segments.length === 0) {\n      segments = [''];\n    }\n  }\n\n  return {\n    segments: segments,\n    queryString: queryString\n  };\n};\n\nvar printRoutes = function printRoutes(routes) {\n  console.group(\"[ion-core] ROUTES[\".concat(routes.length, \"]\"));\n\n  var _iterator4 = _createForOfIteratorHelper(routes),\n      _step4;\n\n  try {\n    var _loop = function _loop() {\n      var chain = _step4.value;\n      var path = [];\n      chain.forEach(function (r) {\n        return path.push.apply(path, _toConsumableArray(r.path));\n      });\n      var ids = chain.map(function (r) {\n        return r.id;\n      });\n      console.debug(\"%c \".concat(generatePath(path)), 'font-weight: bold; padding-left: 20px', '=>\\t', \"(\".concat(ids.join(', '), \")\"));\n    };\n\n    for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n      _loop();\n    }\n  } catch (err) {\n    _iterator4.e(err);\n  } finally {\n    _iterator4.f();\n  }\n\n  console.groupEnd();\n};\n\nvar printRedirects = function printRedirects(redirects) {\n  console.group(\"[ion-core] REDIRECTS[\".concat(redirects.length, \"]\"));\n\n  var _iterator5 = _createForOfIteratorHelper(redirects),\n      _step5;\n\n  try {\n    for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n      var redirect = _step5.value;\n\n      if (redirect.to) {\n        console.debug('FROM: ', \"$c \".concat(generatePath(redirect.from)), 'font-weight: bold', ' TO: ', \"$c \".concat(generatePath(redirect.to.segments)), 'font-weight: bold');\n      }\n    }\n  } catch (err) {\n    _iterator5.e(err);\n  } finally {\n    _iterator5.f();\n  }\n\n  console.groupEnd();\n};\n\nvar _writeNavState = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(root, chain, direction, index) {\n    var changed,\n        animation,\n        outlet,\n        route,\n        result,\n        _args = arguments;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            changed = _args.length > 4 && _args[4] !== undefined ? _args[4] : false;\n            animation = _args.length > 5 ? _args[5] : undefined;\n            _context.prev = 2;\n            // find next navigation outlet in the DOM\n            outlet = searchNavNode(root); // make sure we can continue interacting the DOM, otherwise abort\n\n            if (!(index >= chain.length || !outlet)) {\n              _context.next = 6;\n              break;\n            }\n\n            return _context.abrupt(\"return\", changed);\n\n          case 6:\n            _context.next = 8;\n            return new Promise(function (resolve) {\n              return componentOnReady(outlet, resolve);\n            });\n\n          case 8:\n            route = chain[index];\n            _context.next = 11;\n            return outlet.setRouteId(route.id, route.params, direction, animation);\n\n          case 11:\n            result = _context.sent;\n\n            // if the outlet changed the page, reset navigation to neutral (no direction)\n            // this means nested outlets will not animate\n            if (result.changed) {\n              direction = ROUTER_INTENT_NONE;\n              changed = true;\n            } // recursively set nested outlets\n\n\n            _context.next = 15;\n            return _writeNavState(result.element, chain, direction, index + 1, changed, animation);\n\n          case 15:\n            changed = _context.sent;\n\n            if (!result.markVisible) {\n              _context.next = 19;\n              break;\n            }\n\n            _context.next = 19;\n            return result.markVisible();\n\n          case 19:\n            return _context.abrupt(\"return\", changed);\n\n          case 22:\n            _context.prev = 22;\n            _context.t0 = _context[\"catch\"](2);\n            console.error(_context.t0);\n            return _context.abrupt(\"return\", false);\n\n          case 26:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[2, 22]]);\n  }));\n\n  return function writeNavState(_x, _x2, _x3, _x4) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nvar readNavState = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(root) {\n    var ids, outlet, node, id;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            ids = [];\n            node = root; // tslint:disable-next-line:no-constant-condition\n\n          case 2:\n            if (!true) {\n              _context2.next = 20;\n              break;\n            }\n\n            outlet = searchNavNode(node);\n\n            if (!outlet) {\n              _context2.next = 17;\n              break;\n            }\n\n            _context2.next = 7;\n            return outlet.getRouteId();\n\n          case 7:\n            id = _context2.sent;\n\n            if (!id) {\n              _context2.next = 14;\n              break;\n            }\n\n            node = id.element;\n            id.element = undefined;\n            ids.push(id);\n            _context2.next = 15;\n            break;\n\n          case 14:\n            return _context2.abrupt(\"break\", 20);\n\n          case 15:\n            _context2.next = 18;\n            break;\n\n          case 17:\n            return _context2.abrupt(\"break\", 20);\n\n          case 18:\n            _context2.next = 2;\n            break;\n\n          case 20:\n            return _context2.abrupt(\"return\", {\n              ids: ids,\n              outlet: outlet\n            });\n\n          case 21:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function readNavState(_x5) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nvar waitUntilNavNode = function waitUntilNavNode() {\n  if (searchNavNode(document.body)) {\n    return Promise.resolve();\n  }\n\n  return new Promise(function (resolve) {\n    window.addEventListener('ionNavWillLoad', resolve, {\n      once: true\n    });\n  });\n};\n\nvar QUERY = ':not([no-router]) ion-nav, :not([no-router]) ion-tabs, :not([no-router]) ion-router-outlet';\n\nvar searchNavNode = function searchNavNode(root) {\n  if (!root) {\n    return undefined;\n  }\n\n  if (root.matches(QUERY)) {\n    return root;\n  }\n\n  var outlet = root.querySelector(QUERY);\n  return outlet !== null && outlet !== void 0 ? outlet : undefined;\n}; // Returns whether the given redirect matches the given path segments.\n//\n// A redirect matches when the segments of the path and redirect.from are equal.\n// Note that segments are only checked until redirect.from contains a '*' which matches any path segment.\n// The path ['some', 'path', 'to', 'page'] matches both ['some', 'path', 'to', 'page'] and ['some', 'path', '*'].\n\n\nvar matchesRedirect = function matchesRedirect(path, redirect) {\n  var from = redirect.from,\n      to = redirect.to;\n\n  if (to === undefined) {\n    return false;\n  }\n\n  if (from.length > path.length) {\n    return false;\n  }\n\n  for (var i = 0; i < from.length; i++) {\n    var expected = from[i];\n\n    if (expected === '*') {\n      return true;\n    }\n\n    if (expected !== path[i]) {\n      return false;\n    }\n  }\n\n  return from.length === path.length;\n}; // Returns the first redirect matching the path segments or undefined when no match found.\n\n\nvar findRouteRedirect = function findRouteRedirect(path, redirects) {\n  return redirects.find(function (redirect) {\n    return matchesRedirect(path, redirect);\n  });\n};\n\nvar matchesIDs = function matchesIDs(ids, chain) {\n  var len = Math.min(ids.length, chain.length);\n  var i = 0;\n\n  for (; i < len; i++) {\n    if (ids[i].toLowerCase() !== chain[i].id) {\n      break;\n    }\n  }\n\n  return i;\n};\n\nvar matchesPath = function matchesPath(inputPath, chain) {\n  var segments = new RouterSegments(inputPath);\n  var matchesDefault = false;\n  var allparams;\n\n  for (var i = 0; i < chain.length; i++) {\n    var path = chain[i].path;\n\n    if (path[0] === '') {\n      matchesDefault = true;\n    } else {\n      var _iterator6 = _createForOfIteratorHelper(path),\n          _step6;\n\n      try {\n        for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n          var segment = _step6.value;\n          var data = segments.next(); // data param\n\n          if (segment[0] === ':') {\n            if (data === '') {\n              return null;\n            }\n\n            allparams = allparams || [];\n            var params = allparams[i] || (allparams[i] = {});\n            params[segment.slice(1)] = data;\n          } else if (data !== segment) {\n            return null;\n          }\n        }\n      } catch (err) {\n        _iterator6.e(err);\n      } finally {\n        _iterator6.f();\n      }\n\n      matchesDefault = false;\n    }\n  }\n\n  var matches = matchesDefault ? matchesDefault === (segments.next() === '') : true;\n\n  if (!matches) {\n    return null;\n  }\n\n  if (allparams) {\n    return chain.map(function (route, i) {\n      return {\n        id: route.id,\n        path: route.path,\n        params: mergeParams(route.params, allparams[i]),\n        beforeEnter: route.beforeEnter,\n        beforeLeave: route.beforeLeave\n      };\n    });\n  }\n\n  return chain;\n}; // Merges the route parameter objects.\n// Returns undefined when both parameters are undefined.\n\n\nvar mergeParams = function mergeParams(a, b) {\n  return a || b ? Object.assign(Object.assign({}, a), b) : undefined;\n};\n\nvar routerIDsToChain = function routerIDsToChain(ids, chains) {\n  var match = null;\n  var maxMatches = 0;\n  var plainIDs = ids.map(function (i) {\n    return i.id;\n  });\n\n  var _iterator7 = _createForOfIteratorHelper(chains),\n      _step7;\n\n  try {\n    for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {\n      var chain = _step7.value;\n      var score = matchesIDs(plainIDs, chain);\n\n      if (score > maxMatches) {\n        match = chain;\n        maxMatches = score;\n      }\n    }\n  } catch (err) {\n    _iterator7.e(err);\n  } finally {\n    _iterator7.f();\n  }\n\n  if (match) {\n    return match.map(function (route, i) {\n      return {\n        id: route.id,\n        path: route.path,\n        params: mergeParams(route.params, ids[i] && ids[i].params)\n      };\n    });\n  }\n\n  return null;\n};\n\nvar routerPathToChain = function routerPathToChain(path, chains) {\n  var match = null;\n  var matches = 0;\n\n  var _iterator8 = _createForOfIteratorHelper(chains),\n      _step8;\n\n  try {\n    for (_iterator8.s(); !(_step8 = _iterator8.n()).done;) {\n      var chain = _step8.value;\n      var matchedChain = matchesPath(path, chain);\n\n      if (matchedChain !== null) {\n        var score = computePriority(matchedChain);\n\n        if (score > matches) {\n          matches = score;\n          match = matchedChain;\n        }\n      }\n    }\n  } catch (err) {\n    _iterator8.e(err);\n  } finally {\n    _iterator8.f();\n  }\n\n  return match;\n};\n\nvar computePriority = function computePriority(chain) {\n  var score = 1;\n  var level = 1;\n\n  var _iterator9 = _createForOfIteratorHelper(chain),\n      _step9;\n\n  try {\n    for (_iterator9.s(); !(_step9 = _iterator9.n()).done;) {\n      var route = _step9.value;\n\n      var _iterator10 = _createForOfIteratorHelper(route.path),\n          _step10;\n\n      try {\n        for (_iterator10.s(); !(_step10 = _iterator10.n()).done;) {\n          var path = _step10.value;\n\n          if (path[0] === ':') {\n            score += Math.pow(1, level);\n          } else if (path !== '') {\n            score += Math.pow(2, level);\n          }\n\n          level++;\n        }\n      } catch (err) {\n        _iterator10.e(err);\n      } finally {\n        _iterator10.f();\n      }\n    }\n  } catch (err) {\n    _iterator9.e(err);\n  } finally {\n    _iterator9.f();\n  }\n\n  return score;\n};\n\nvar RouterSegments = /*#__PURE__*/function () {\n  function RouterSegments(path) {\n    _classCallCheck(this, RouterSegments);\n\n    this.path = path.slice();\n  }\n\n  _createClass(RouterSegments, [{\n    key: \"next\",\n    value: function next() {\n      if (this.path.length > 0) {\n        return this.path.shift();\n      }\n\n      return '';\n    }\n  }]);\n\n  return RouterSegments;\n}();\n\nvar readProp = function readProp(el, prop) {\n  if (prop in el) {\n    return el[prop];\n  }\n\n  if (el.hasAttribute(prop)) {\n    return el.getAttribute(prop);\n  }\n\n  return null;\n};\n\nvar readRedirects = function readRedirects(root) {\n  return Array.from(root.children).filter(function (el) {\n    return el.tagName === 'ION-ROUTE-REDIRECT';\n  }).map(function (el) {\n    var to = readProp(el, 'to');\n    return {\n      from: parsePath(readProp(el, 'from')).segments,\n      to: to == null ? undefined : parsePath(to)\n    };\n  });\n};\n\nvar readRoutes = function readRoutes(root) {\n  return flattenRouterTree(readRouteNodes(root));\n};\n\nvar readRouteNodes = function readRouteNodes(node) {\n  return Array.from(node.children).filter(function (el) {\n    return el.tagName === 'ION-ROUTE' && el.component;\n  }).map(function (el) {\n    var component = readProp(el, 'component');\n    return {\n      path: parsePath(readProp(el, 'url')).segments,\n      id: component.toLowerCase(),\n      params: el.componentProps,\n      beforeLeave: el.beforeLeave,\n      beforeEnter: el.beforeEnter,\n      children: readRouteNodes(el)\n    };\n  });\n};\n\nvar flattenRouterTree = function flattenRouterTree(nodes) {\n  var chains = [];\n\n  var _iterator11 = _createForOfIteratorHelper(nodes),\n      _step11;\n\n  try {\n    for (_iterator11.s(); !(_step11 = _iterator11.n()).done;) {\n      var node = _step11.value;\n      flattenNode([], chains, node);\n    }\n  } catch (err) {\n    _iterator11.e(err);\n  } finally {\n    _iterator11.f();\n  }\n\n  return chains;\n};\n\nvar flattenNode = function flattenNode(chain, chains, node) {\n  chain = chain.slice();\n  chain.push({\n    id: node.id,\n    path: node.path,\n    params: node.params,\n    beforeLeave: node.beforeLeave,\n    beforeEnter: node.beforeEnter\n  });\n\n  if (node.children.length === 0) {\n    chains.push(chain);\n    return;\n  }\n\n  var _iterator12 = _createForOfIteratorHelper(node.children),\n      _step12;\n\n  try {\n    for (_iterator12.s(); !(_step12 = _iterator12.n()).done;) {\n      var child = _step12.value;\n      flattenNode(chain, chains, child);\n    }\n  } catch (err) {\n    _iterator12.e(err);\n  } finally {\n    _iterator12.f();\n  }\n};\n\nvar Router = /*#__PURE__*/function () {\n  function Router(hostRef) {\n    _classCallCheck(this, Router);\n\n    registerInstance(this, hostRef);\n    this.ionRouteWillChange = createEvent(this, \"ionRouteWillChange\", 7);\n    this.ionRouteDidChange = createEvent(this, \"ionRouteDidChange\", 7);\n    this.previousPath = null;\n    this.busy = false;\n    this.state = 0;\n    this.lastState = 0;\n    /**\n     * The root path to use when matching URLs. By default, this is set to \"/\", but you can specify\n     * an alternate prefix for all URL paths.\n     */\n\n    this.root = '/';\n    /**\n     * The router can work in two \"modes\":\n     * - With hash: `/index.html#/path/to/page`\n     * - Without hash: `/path/to/page`\n     *\n     * Using one or another might depend in the requirements of your app and/or where it's deployed.\n     *\n     * Usually \"hash-less\" navigation works better for SEO and it's more user friendly too, but it might\n     * requires additional server-side configuration in order to properly work.\n     *\n     * On the other side hash-navigation is much easier to deploy, it even works over the file protocol.\n     *\n     * By default, this property is `true`, change to `false` to allow hash-less URLs.\n     */\n\n    this.useHash = true;\n  }\n\n  _createClass(Router, [{\n    key: \"componentWillLoad\",\n    value: function () {\n      var _componentWillLoad = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        var canProceed, redirect, path;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return waitUntilNavNode();\n\n              case 2:\n                _context3.next = 4;\n                return this.runGuards(this.getPath());\n\n              case 4:\n                canProceed = _context3.sent;\n\n                if (!(canProceed !== true)) {\n                  _context3.next = 14;\n                  break;\n                }\n\n                if (!(typeof canProceed === 'object')) {\n                  _context3.next = 12;\n                  break;\n                }\n\n                redirect = canProceed.redirect;\n                path = parsePath(redirect);\n                this.setPath(path.segments, ROUTER_INTENT_NONE, path.queryString);\n                _context3.next = 12;\n                return this.writeNavStateRoot(path.segments, ROUTER_INTENT_NONE);\n\n              case 12:\n                _context3.next = 16;\n                break;\n\n              case 14:\n                _context3.next = 16;\n                return this.onRoutesChanged();\n\n              case 16:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function componentWillLoad() {\n        return _componentWillLoad.apply(this, arguments);\n      }\n\n      return componentWillLoad;\n    }()\n  }, {\n    key: \"componentDidLoad\",\n    value: function componentDidLoad() {\n      window.addEventListener('ionRouteRedirectChanged', debounce(this.onRedirectChanged.bind(this), 10));\n      window.addEventListener('ionRouteDataChanged', debounce(this.onRoutesChanged.bind(this), 100));\n    }\n  }, {\n    key: \"onPopState\",\n    value: function () {\n      var _onPopState = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n        var direction, segments, canProceed;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                direction = this.historyDirection();\n                segments = this.getPath();\n                _context4.next = 4;\n                return this.runGuards(segments);\n\n              case 4:\n                canProceed = _context4.sent;\n\n                if (!(canProceed !== true)) {\n                  _context4.next = 11;\n                  break;\n                }\n\n                if (!(typeof canProceed === 'object')) {\n                  _context4.next = 10;\n                  break;\n                }\n\n                segments = parsePath(canProceed.redirect).segments;\n                _context4.next = 11;\n                break;\n\n              case 10:\n                return _context4.abrupt(\"return\", false);\n\n              case 11:\n                return _context4.abrupt(\"return\", this.writeNavStateRoot(segments, direction));\n\n              case 12:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function onPopState() {\n        return _onPopState.apply(this, arguments);\n      }\n\n      return onPopState;\n    }()\n  }, {\n    key: \"onBackButton\",\n    value: function onBackButton(ev) {\n      var _this = this;\n\n      ev.detail.register(0, function (processNextHandler) {\n        _this.back();\n\n        processNextHandler();\n      });\n    }\n    /** @internal */\n\n  }, {\n    key: \"canTransition\",\n    value: function () {\n      var _canTransition = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5() {\n        var canProceed;\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.next = 2;\n                return this.runGuards();\n\n              case 2:\n                canProceed = _context5.sent;\n\n                if (!(canProceed !== true)) {\n                  _context5.next = 9;\n                  break;\n                }\n\n                if (!(typeof canProceed === 'object')) {\n                  _context5.next = 8;\n                  break;\n                }\n\n                return _context5.abrupt(\"return\", canProceed.redirect);\n\n              case 8:\n                return _context5.abrupt(\"return\", false);\n\n              case 9:\n                return _context5.abrupt(\"return\", true);\n\n              case 10:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      function canTransition() {\n        return _canTransition.apply(this, arguments);\n      }\n\n      return canTransition;\n    }()\n    /**\n     * Navigate to the specified URL.\n     *\n     * @param url The url to navigate to.\n     * @param direction The direction of the animation. Defaults to `\"forward\"`.\n     */\n\n  }, {\n    key: \"push\",\n    value: function () {\n      var _push = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6(url) {\n        var direction,\n            animation,\n            parsedPath,\n            canProceed,\n            _args6 = arguments;\n        return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                direction = _args6.length > 1 && _args6[1] !== undefined ? _args6[1] : 'forward';\n                animation = _args6.length > 2 ? _args6[2] : undefined;\n\n                if (url.startsWith('.')) {\n                  url = new URL(url, window.location.href).pathname;\n                }\n\n                parsedPath = parsePath(url);\n                _context6.next = 6;\n                return this.runGuards(parsedPath.segments);\n\n              case 6:\n                canProceed = _context6.sent;\n\n                if (!(canProceed !== true)) {\n                  _context6.next = 13;\n                  break;\n                }\n\n                if (!(typeof canProceed === 'object')) {\n                  _context6.next = 12;\n                  break;\n                }\n\n                parsedPath = parsePath(canProceed.redirect);\n                _context6.next = 13;\n                break;\n\n              case 12:\n                return _context6.abrupt(\"return\", false);\n\n              case 13:\n                this.setPath(parsedPath.segments, direction, parsedPath.queryString);\n                return _context6.abrupt(\"return\", this.writeNavStateRoot(parsedPath.segments, direction, animation));\n\n              case 15:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this);\n      }));\n\n      function push(_x6) {\n        return _push.apply(this, arguments);\n      }\n\n      return push;\n    }()\n    /**\n     * Go back to previous page in the window.history.\n     */\n\n  }, {\n    key: \"back\",\n    value: function back() {\n      window.history.back();\n      return Promise.resolve(this.waitPromise);\n    }\n    /** @internal */\n\n  }, {\n    key: \"printDebug\",\n    value: function () {\n      var _printDebug = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7() {\n        return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                printRoutes(readRoutes(this.el));\n                printRedirects(readRedirects(this.el));\n\n              case 2:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7, this);\n      }));\n\n      function printDebug() {\n        return _printDebug.apply(this, arguments);\n      }\n\n      return printDebug;\n    }()\n    /** @internal */\n\n  }, {\n    key: \"navChanged\",\n    value: function () {\n      var _navChanged = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee8(direction) {\n        var _yield$readNavState, ids, outlet, routes, chain, path;\n\n        return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                if (!this.busy) {\n                  _context8.next = 3;\n                  break;\n                }\n\n                console.warn('[ion-router] router is busy, navChanged was cancelled');\n                return _context8.abrupt(\"return\", false);\n\n              case 3:\n                _context8.next = 5;\n                return readNavState(window.document.body);\n\n              case 5:\n                _yield$readNavState = _context8.sent;\n                ids = _yield$readNavState.ids;\n                outlet = _yield$readNavState.outlet;\n                routes = readRoutes(this.el);\n                chain = routerIDsToChain(ids, routes);\n\n                if (chain) {\n                  _context8.next = 13;\n                  break;\n                }\n\n                console.warn('[ion-router] no matching URL for ', ids.map(function (i) {\n                  return i.id;\n                }));\n                return _context8.abrupt(\"return\", false);\n\n              case 13:\n                path = chainToPath(chain);\n\n                if (path) {\n                  _context8.next = 17;\n                  break;\n                }\n\n                console.warn('[ion-router] router could not match path because some required param is missing');\n                return _context8.abrupt(\"return\", false);\n\n              case 17:\n                this.setPath(path, direction);\n                _context8.next = 20;\n                return this.safeWriteNavState(outlet, chain, ROUTER_INTENT_NONE, path, null, ids.length);\n\n              case 20:\n                return _context8.abrupt(\"return\", true);\n\n              case 21:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8, this);\n      }));\n\n      function navChanged(_x7) {\n        return _navChanged.apply(this, arguments);\n      }\n\n      return navChanged;\n    }() // This handler gets called when a `ion-route-redirect` component is added to the DOM or if the from or to property of such node changes.\n\n  }, {\n    key: \"onRedirectChanged\",\n    value: function onRedirectChanged() {\n      var path = this.getPath();\n\n      if (path && findRouteRedirect(path, readRedirects(this.el))) {\n        this.writeNavStateRoot(path, ROUTER_INTENT_NONE);\n      }\n    } // This handler gets called when a `ion-route` component is added to the DOM or if the from or to property of such node changes.\n\n  }, {\n    key: \"onRoutesChanged\",\n    value: function onRoutesChanged() {\n      return this.writeNavStateRoot(this.getPath(), ROUTER_INTENT_NONE);\n    }\n  }, {\n    key: \"historyDirection\",\n    value: function historyDirection() {\n      var _a;\n\n      var win = window;\n\n      if (win.history.state === null) {\n        this.state++;\n        win.history.replaceState(this.state, win.document.title, (_a = win.document.location) === null || _a === void 0 ? void 0 : _a.href);\n      }\n\n      var state = win.history.state;\n      var lastState = this.lastState;\n      this.lastState = state;\n\n      if (state > lastState || state >= lastState && lastState > 0) {\n        return ROUTER_INTENT_FORWARD;\n      }\n\n      if (state < lastState) {\n        return ROUTER_INTENT_BACK;\n      }\n\n      return ROUTER_INTENT_NONE;\n    }\n  }, {\n    key: \"writeNavStateRoot\",\n    value: function () {\n      var _writeNavStateRoot = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee9(path, direction, animation) {\n        var redirects, redirect, redirectFrom, _redirect$to, segments, queryString, routes, chain;\n\n        return _regeneratorRuntime.wrap(function _callee9$(_context9) {\n          while (1) {\n            switch (_context9.prev = _context9.next) {\n              case 0:\n                if (path) {\n                  _context9.next = 3;\n                  break;\n                }\n\n                console.error('[ion-router] URL is not part of the routing set');\n                return _context9.abrupt(\"return\", false);\n\n              case 3:\n                // lookup redirect rule\n                redirects = readRedirects(this.el);\n                redirect = findRouteRedirect(path, redirects);\n                redirectFrom = null;\n\n                if (redirect) {\n                  _redirect$to = redirect.to, segments = _redirect$to.segments, queryString = _redirect$to.queryString;\n                  this.setPath(segments, direction, queryString);\n                  redirectFrom = redirect.from;\n                  path = segments;\n                } // lookup route chain\n\n\n                routes = readRoutes(this.el);\n                chain = routerPathToChain(path, routes);\n\n                if (chain) {\n                  _context9.next = 12;\n                  break;\n                }\n\n                console.error('[ion-router] the path does not match any route');\n                return _context9.abrupt(\"return\", false);\n\n              case 12:\n                return _context9.abrupt(\"return\", this.safeWriteNavState(document.body, chain, direction, path, redirectFrom, 0, animation));\n\n              case 13:\n              case \"end\":\n                return _context9.stop();\n            }\n          }\n        }, _callee9, this);\n      }));\n\n      function writeNavStateRoot(_x8, _x9, _x10) {\n        return _writeNavStateRoot.apply(this, arguments);\n      }\n\n      return writeNavStateRoot;\n    }()\n  }, {\n    key: \"safeWriteNavState\",\n    value: function () {\n      var _safeWriteNavState = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee10(node, chain, direction, path, redirectFrom) {\n        var index,\n            animation,\n            unlock,\n            changed,\n            _args10 = arguments;\n        return _regeneratorRuntime.wrap(function _callee10$(_context10) {\n          while (1) {\n            switch (_context10.prev = _context10.next) {\n              case 0:\n                index = _args10.length > 5 && _args10[5] !== undefined ? _args10[5] : 0;\n                animation = _args10.length > 6 ? _args10[6] : undefined;\n                _context10.next = 4;\n                return this.lock();\n\n              case 4:\n                unlock = _context10.sent;\n                changed = false;\n                _context10.prev = 6;\n                _context10.next = 9;\n                return this.writeNavState(node, chain, direction, path, redirectFrom, index, animation);\n\n              case 9:\n                changed = _context10.sent;\n                _context10.next = 15;\n                break;\n\n              case 12:\n                _context10.prev = 12;\n                _context10.t0 = _context10[\"catch\"](6);\n                console.error(_context10.t0);\n\n              case 15:\n                unlock();\n                return _context10.abrupt(\"return\", changed);\n\n              case 17:\n              case \"end\":\n                return _context10.stop();\n            }\n          }\n        }, _callee10, this, [[6, 12]]);\n      }));\n\n      function safeWriteNavState(_x11, _x12, _x13, _x14, _x15) {\n        return _safeWriteNavState.apply(this, arguments);\n      }\n\n      return safeWriteNavState;\n    }()\n  }, {\n    key: \"lock\",\n    value: function () {\n      var _lock = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee11() {\n        var p, resolve;\n        return _regeneratorRuntime.wrap(function _callee11$(_context11) {\n          while (1) {\n            switch (_context11.prev = _context11.next) {\n              case 0:\n                p = this.waitPromise;\n                this.waitPromise = new Promise(function (r) {\n                  return resolve = r;\n                });\n\n                if (!(p !== undefined)) {\n                  _context11.next = 5;\n                  break;\n                }\n\n                _context11.next = 5;\n                return p;\n\n              case 5:\n                return _context11.abrupt(\"return\", resolve);\n\n              case 6:\n              case \"end\":\n                return _context11.stop();\n            }\n          }\n        }, _callee11, this);\n      }));\n\n      function lock() {\n        return _lock.apply(this, arguments);\n      }\n\n      return lock;\n    }() // Executes the beforeLeave hook of the source route and the beforeEnter hook of the target route if they exist.\n    //\n    // When the beforeLeave hook does not return true (to allow navigating) then that value is returned early and the beforeEnter is executed.\n    // Otherwise the beforeEnterHook hook of the target route is executed.\n\n  }, {\n    key: \"runGuards\",\n    value: function () {\n      var _runGuards = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee12() {\n        var to,\n            from,\n            routes,\n            fromChain,\n            beforeLeaveHook,\n            canLeave,\n            toChain,\n            beforeEnterHook,\n            _args12 = arguments;\n        return _regeneratorRuntime.wrap(function _callee12$(_context12) {\n          while (1) {\n            switch (_context12.prev = _context12.next) {\n              case 0:\n                to = _args12.length > 0 && _args12[0] !== undefined ? _args12[0] : this.getPath();\n                from = _args12.length > 1 ? _args12[1] : undefined;\n\n                if (from === undefined) {\n                  from = parsePath(this.previousPath).segments;\n                }\n\n                if (!(!to || !from)) {\n                  _context12.next = 5;\n                  break;\n                }\n\n                return _context12.abrupt(\"return\", true);\n\n              case 5:\n                routes = readRoutes(this.el);\n                fromChain = routerPathToChain(from, routes);\n                beforeLeaveHook = fromChain && fromChain[fromChain.length - 1].beforeLeave;\n\n                if (!beforeLeaveHook) {\n                  _context12.next = 14;\n                  break;\n                }\n\n                _context12.next = 11;\n                return beforeLeaveHook();\n\n              case 11:\n                _context12.t0 = _context12.sent;\n                _context12.next = 15;\n                break;\n\n              case 14:\n                _context12.t0 = true;\n\n              case 15:\n                canLeave = _context12.t0;\n\n                if (!(canLeave === false || typeof canLeave === 'object')) {\n                  _context12.next = 18;\n                  break;\n                }\n\n                return _context12.abrupt(\"return\", canLeave);\n\n              case 18:\n                toChain = routerPathToChain(to, routes);\n                beforeEnterHook = toChain && toChain[toChain.length - 1].beforeEnter;\n                return _context12.abrupt(\"return\", beforeEnterHook ? beforeEnterHook() : true);\n\n              case 21:\n              case \"end\":\n                return _context12.stop();\n            }\n          }\n        }, _callee12, this);\n      }));\n\n      function runGuards() {\n        return _runGuards.apply(this, arguments);\n      }\n\n      return runGuards;\n    }()\n  }, {\n    key: \"writeNavState\",\n    value: function () {\n      var _writeNavState2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee13(node, chain, direction, path, redirectFrom) {\n        var index,\n            animation,\n            routeEvent,\n            changed,\n            _args13 = arguments;\n        return _regeneratorRuntime.wrap(function _callee13$(_context13) {\n          while (1) {\n            switch (_context13.prev = _context13.next) {\n              case 0:\n                index = _args13.length > 5 && _args13[5] !== undefined ? _args13[5] : 0;\n                animation = _args13.length > 6 ? _args13[6] : undefined;\n\n                if (!this.busy) {\n                  _context13.next = 5;\n                  break;\n                }\n\n                console.warn('[ion-router] router is busy, transition was cancelled');\n                return _context13.abrupt(\"return\", false);\n\n              case 5:\n                this.busy = true; // generate route event and emit will change\n\n                routeEvent = this.routeChangeEvent(path, redirectFrom);\n\n                if (routeEvent) {\n                  this.ionRouteWillChange.emit(routeEvent);\n                }\n\n                _context13.next = 10;\n                return _writeNavState(node, chain, direction, index, false, animation);\n\n              case 10:\n                changed = _context13.sent;\n                this.busy = false; // emit did change\n\n                if (routeEvent) {\n                  this.ionRouteDidChange.emit(routeEvent);\n                }\n\n                return _context13.abrupt(\"return\", changed);\n\n              case 14:\n              case \"end\":\n                return _context13.stop();\n            }\n          }\n        }, _callee13, this);\n      }));\n\n      function writeNavState(_x16, _x17, _x18, _x19, _x20) {\n        return _writeNavState2.apply(this, arguments);\n      }\n\n      return writeNavState;\n    }()\n  }, {\n    key: \"setPath\",\n    value: function setPath(path, direction, queryString) {\n      this.state++;\n      writePath(window.history, this.root, this.useHash, path, direction, this.state, queryString);\n    }\n  }, {\n    key: \"getPath\",\n    value: function getPath() {\n      return readPath(window.location, this.root, this.useHash);\n    }\n  }, {\n    key: \"routeChangeEvent\",\n    value: function routeChangeEvent(path, redirectFromPath) {\n      var from = this.previousPath;\n      var to = generatePath(path);\n      this.previousPath = to;\n\n      if (to === from) {\n        return null;\n      }\n\n      var redirectedFrom = redirectFromPath ? generatePath(redirectFromPath) : null;\n      return {\n        from: from,\n        redirectedFrom: redirectedFrom,\n        to: to\n      };\n    }\n  }, {\n    key: \"el\",\n    get: function get() {\n      return getElement(this);\n    }\n  }]);\n\n  return Router;\n}();\n\nvar routerLinkCss = \":host{--background:transparent;--color:var(--ion-color-primary, #3880ff);background:var(--background);color:var(--color)}:host(.ion-color){color:var(--ion-color-base)}a{font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;letter-spacing:inherit;text-decoration:inherit;text-indent:inherit;text-overflow:inherit;text-transform:inherit;text-align:inherit;white-space:inherit;color:inherit}\";\n\nvar RouterLink = /*#__PURE__*/function () {\n  function RouterLink(hostRef) {\n    var _this2 = this;\n\n    _classCallCheck(this, RouterLink);\n\n    registerInstance(this, hostRef);\n    /**\n     * When using a router, it specifies the transition direction when navigating to\n     * another page using `href`.\n     */\n\n    this.routerDirection = 'forward';\n\n    this.onClick = function (ev) {\n      openURL(_this2.href, ev, _this2.routerDirection, _this2.routerAnimation);\n    };\n  }\n\n  _createClass(RouterLink, [{\n    key: \"render\",\n    value: function render() {\n      var _createColorClasses;\n\n      var mode = getIonMode(this);\n      var attrs = {\n        href: this.href,\n        rel: this.rel,\n        target: this.target\n      };\n      return h(Host, {\n        onClick: this.onClick,\n        class: createColorClasses(this.color, (_createColorClasses = {}, _defineProperty(_createColorClasses, mode, true), _defineProperty(_createColorClasses, 'ion-activatable', true), _createColorClasses))\n      }, h(\"a\", Object.assign({}, attrs), h(\"slot\", null)));\n    }\n  }]);\n\n  return RouterLink;\n}();\n\nRouterLink.style = routerLinkCss;\nexport { Route as ion_route, RouteRedirect as ion_route_redirect, Router as ion_router, RouterLink as ion_router_link };","map":null,"metadata":{},"sourceType":"module"}